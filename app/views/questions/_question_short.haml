-title = h(question.title)
-if question.closed
  -title += " [ZAMKNIĘTE]"

-if !local_assigns[:mini]
  -owner = nil
  - if question.last_target_id.present?
    - last_target_id = question.last_target_id
    - last_target_date = question.last_target_date
    - owner = question.last_target_user
  -else
    - last_target = question
    - last_target_date = question.updated_at
    - owner = question.user unless question.anonymous

  %article{:class => class_for_question(question)}
    .counters
      .votecount
        .count
          25
        .tail
          głosów
      - r = Random.new.rand(1..3)
      - if r == 1
        .answercount
          .count
            3
          .tail
            odpowiedzi
      - elsif r == 2
        .answercount-none
          .count
            0
          .tail
            odpowiedzi
      - else
        .answercount-accepted
          .count
            5
          .tail
            odpowiedzi
      .viewcount
        .count
          1350
        .tail
          wyświetleń
    .summary
      -cache("question_on_index_#{question.id}_#{I18n.locale}") do
        %h2
          = link_to title, question_path(question), :title => truncate(strip_tags(question.body), :length => 200)

      .user-data
        %span.timeago
          = time_ago_in_words(last_target_date)
        -if owner
          =render :partial => "users/user_data", :locals => {:user => owner}
        -else
          anonim

      .tags
        %ul
          -if question.wiki
            %li{:class => "wiki" }
              wiki
          %li{:class => "tag_gielda"}
            gielda
          %li{:class => "tag_gielda"}
            pytanie
          -question.first_tags.each do |tag|
            %li{:class => "tag_#{h(tag)}"}
              = link_to h(tag), tag_path(:id => tag), :rel => "tag", :title => t("questions.tags.tooltip", :tag => tag)
          -if question.tags.empty? && logged_in? && (current_user.can_modify?(@question) || current_user.can_retag_others_questions_on?(current_group))
            %li
              = link_to t('questions.show.retag'), retag_question_path(question), :id => 'retag', :class => "important"
    .clear

-else
  -cache("mini_question_on_index_#{question.id}_#{I18n.locale}") do
    %article{:class => "#{class_for_question(question)} #{local_assigns[:lite] ? 'lite' : ''}"}

      %h3
        = link_to title, question_path(question)

      .toolbar
        %ul
          %li.answers
            = link_to "#{format_number(question.answers_count)} #{t(:answers, :scope => "activerecord.attributes.question")}"
